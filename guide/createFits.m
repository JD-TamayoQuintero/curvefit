function [fitresult, gof] = createFits(XX, YY)
%CREATEFITS(XX,YY)
%  Create fits.
%
%  Data for 'fourier-10coe' fit:
%      X Input : XX
%      Y Output: YY
%  Data for 'fourier-6coe' fit:
%      X Input : XX
%      Y Output: YY
%  Data for 'poli 5coe' fit:
%      X Input : XX
%      Y Output: YY
%  Data for 'poli 6 coe' fit:
%      X Input : XX
%      Y Output: YY
%  Data for 'gausian 6' fit:
%      X Input : XX
%      Y Output: YY
%  Data for 'exp 6' fit:
%      X Input : XX
%      Y Output: YY
%  Data for 'poly' fit:
%      X Input : XX
%      Y Output: YY
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 01-Dec-2020 21:48:09

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 7, 1 );
gof = struct( 'sse', cell( 7, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'fourier-10coe'.
[xData, yData] = prepareCurveData( XX, YY );

% Set up fittype and options.
ft = fittype( 'fourier4' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Normalize = 'on';
opts.StartPoint = [0 0 0 0 0 0 0 0 0 0.427623964745139];

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );

% Create a figure for the plots.
figure( 'Name', 'fourier-10coe' );

% Plot fit with data.
subplot( 2, 1, 1 );
h = plot( fitresult{1}, xData, yData );
legend( h, 'YY vs. XX', 'fourier-10coe', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'XX', 'Interpreter', 'none' );
ylabel( 'YY', 'Interpreter', 'none' );
grid on

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult{1}, xData, yData, 'residuals' );
legend( h, 'fourier-10coe - residuals', 'Zero Line', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'XX', 'Interpreter', 'none' );
ylabel( 'YY', 'Interpreter', 'none' );
grid on

%% Fit: 'fourier-6coe'.
[xData, yData] = prepareCurveData( XX, YY );

% Set up fittype and options.
ft = fittype( 'fourier2' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Normalize = 'on';
opts.StartPoint = [0 0 0 0 0 0.855247929490279];

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );

% Create a figure for the plots.
figure( 'Name', 'fourier-6coe' );

% Plot fit with data.
subplot( 2, 1, 1 );
h = plot( fitresult{2}, xData, yData );
legend( h, 'YY vs. XX', 'fourier-6coe', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'XX', 'Interpreter', 'none' );
ylabel( 'YY', 'Interpreter', 'none' );
grid on

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult{2}, xData, yData, 'residuals' );
legend( h, 'fourier-6coe - residuals', 'Zero Line', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'XX', 'Interpreter', 'none' );
ylabel( 'YY', 'Interpreter', 'none' );
grid on

%% Fit: 'poli 5coe'.
[xData, yData] = prepareCurveData( XX, YY );

% Set up fittype and options.
ft = fittype( 'poly4' );

% Fit model to data.
[fitresult{3}, gof(3)] = fit( xData, yData, ft, 'Normalize', 'on' );

% Create a figure for the plots.
figure( 'Name', 'poli 5coe' );

% Plot fit with data.
subplot( 2, 1, 1 );
h = plot( fitresult{3}, xData, yData );
legend( h, 'YY vs. XX', 'poli 5coe', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'XX', 'Interpreter', 'none' );
ylabel( 'YY', 'Interpreter', 'none' );
grid on

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult{3}, xData, yData, 'residuals' );
legend( h, 'poli 5coe - residuals', 'Zero Line', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'XX', 'Interpreter', 'none' );
ylabel( 'YY', 'Interpreter', 'none' );
grid on

%% Fit: 'poli 6 coe'.
[xData, yData] = prepareCurveData( XX, YY );

% Set up fittype and options.
ft = fittype( 'poly6' );

% Fit model to data.
[fitresult{4}, gof(4)] = fit( xData, yData, ft, 'Normalize', 'on' );

% Create a figure for the plots.
figure( 'Name', 'poli 6 coe' );

% Plot fit with data.
subplot( 2, 1, 1 );
h = plot( fitresult{4}, xData, yData );
legend( h, 'YY vs. XX', 'poli 6 coe', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'XX', 'Interpreter', 'none' );
ylabel( 'YY', 'Interpreter', 'none' );
grid on

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult{4}, xData, yData, 'residuals' );
legend( h, 'poli 6 coe - residuals', 'Zero Line', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'XX', 'Interpreter', 'none' );
ylabel( 'YY', 'Interpreter', 'none' );
grid on

%% Fit: 'gausian 6'.
[xData, yData] = prepareCurveData( XX, YY );

% Set up fittype and options.
ft = fittype( 'gauss2' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [-Inf -Inf 0 -Inf -Inf 0];
opts.StartPoint = [212 69 47.7522419860072 207.999999997199 308 23.3167918409179];

% Fit model to data.
[fitresult{5}, gof(5)] = fit( xData, yData, ft, opts );

% Create a figure for the plots.
figure( 'Name', 'gausian 6' );

% Plot fit with data.
subplot( 2, 1, 1 );
h = plot( fitresult{5}, xData, yData );
legend( h, 'YY vs. XX', 'gausian 6', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'XX', 'Interpreter', 'none' );
ylabel( 'YY', 'Interpreter', 'none' );
grid on

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult{5}, xData, yData, 'residuals' );
legend( h, 'gausian 6 - residuals', 'Zero Line', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'XX', 'Interpreter', 'none' );
ylabel( 'YY', 'Interpreter', 'none' );
grid on

%% Fit: 'exp 6'.
[xData, yData] = prepareCurveData( XX, YY );

% Set up fittype and options.
ft = fittype( 'exp2' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Normalize = 'on';
opts.StartPoint = [9.46072368964565 -1.67184821414773 9.6745117984027 1.64384458061111];

% Fit model to data.
[fitresult{6}, gof(6)] = fit( xData, yData, ft, opts );

% Create a figure for the plots.
figure( 'Name', 'exp 6' );

% Plot fit with data.
subplot( 2, 1, 1 );
h = plot( fitresult{6}, xData, yData );
legend( h, 'YY vs. XX', 'exp 6', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'XX', 'Interpreter', 'none' );
ylabel( 'YY', 'Interpreter', 'none' );
grid on

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult{6}, xData, yData, 'residuals' );
legend( h, 'exp 6 - residuals', 'Zero Line', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'XX', 'Interpreter', 'none' );
ylabel( 'YY', 'Interpreter', 'none' );
grid on

%% Fit: 'poly'.
[xData, yData] = prepareCurveData( XX, YY );

% Set up fittype and options.
ft = fittype( 'gauss2' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [-Inf -Inf 0 -Inf -Inf 0];
opts.StartPoint = [212 69 47.7522419860072 207.999999997199 308 23.3167918409179];

% Fit model to data.
[fitresult{7}, gof(7)] = fit( xData, yData, ft, opts );

% Create a figure for the plots.
figure( 'Name', 'poly' );

% Plot fit with data.
subplot( 2, 1, 1 );
h = plot( fitresult{7}, xData, yData );
legend( h, 'YY vs. XX', 'poly', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'XX', 'Interpreter', 'none' );
ylabel( 'YY', 'Interpreter', 'none' );
grid on

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult{7}, xData, yData, 'residuals' );
legend( h, 'poly - residuals', 'Zero Line', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'XX', 'Interpreter', 'none' );
ylabel( 'YY', 'Interpreter', 'none' );
grid on


